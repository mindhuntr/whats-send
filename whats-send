#!/usr/bin/python3 

from whatsapp_api_client_python import API
from inquirer import display_list,style 
from argparse import ArgumentParser
from termcolor import colored, cprint
from os import path 
import config 
import mimetypes 
import sys

def main(): 

    parser = ArgumentParser(description='command line whatsapp client') 
    parser.add_argument('message', type=str,help="the message you would like to send",nargs="*") 
    parser.add_argument('-f','--file',type=str,nargs="+",help="files to send")
    parser.add_argument('-c','--chats',type=str,nargs="+",help="name of the chat",required=True) 
    parser.add_argument('-n','--nchats',type=int,nargs="?",default=20,help="no chats to display") 
    parser.add_argument('-g','--get-group-info',type=str,nargs="?",help="file to write group data to") 

    contacts = greenAPI.serviceMethods.getContacts()
    args = parser.parse_args()

    chats = [] 
    if not chats: 
        chats_list = { 
                item['name']:item['id'] for item in contacts.data 
                }
    if args.message: 
        if not chats:
            chats = display_list(args.nchats,args.chats,chats_list)
        for message in args.message: 
            for chat_id in chats: 
                greenAPI.sending.sendMessage(chat_id,message)
    
    if args.file: 
        if not chats: 
            chats = display_list(args.nchats,args.chats,chats_list)
        for file in args.file:
            if path.exists(file): 
                for chat_id in chats: 
                    greenAPI.sending.sendFileByUpload(chat_id,file) 
                    print("{} sent".format(file))

    if args.get_group_info: 
        group_info = {} 
        if not chats: 
            chats = display_list(args.nchats,args.chats,chats_list) 

        for group_id in chats: 
            group_res = greenAPI.groups.getGroupData(group_id) 
            group_members = [ member['id'] for member in group_res.data['participants'] ]
            group_info[group_res.data['subject']] = group_members 

        with open(args.get_group_info, 'wb') as file: 

            for group,members in group_info.items(): 
                file.write(group.encode('utf-8'))
                file.write('\n\n'.encode('utf-8'))

                for member in members:
                    info_member = greenAPI.serviceMethods.getContactInfo(member) 
                    name = "\t{:<35}".format(info_member.data['name']) 
                    number = "{}\n".format(info_member.data['chatId'].strip("@c.us"))

                    file.write(name.encode('utf-8'))
                    file.write(number.encode('utf-8'))

if __name__ == "__main__" : 

    if path.exists(config.fullpath): 
        config.parser.read(config.fullpath) 
        api_id = config.parser.get('whats-send','api_id') 
        api_token = config.parser.get('whats-send','api_token') 

    else: 
        config.generate_conf() 
        config.parser.read(config.fullpath) 
        api_id = config.parser.get('whats-send','api_id') 
        api_token = config.parser.get('whats-send','api_token') 

    greenAPI = API.GreenApi(api_id,api_token)
    main() 

